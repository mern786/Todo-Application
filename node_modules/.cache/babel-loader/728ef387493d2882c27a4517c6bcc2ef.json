{"ast":null,"code":"import _slicedToArray from \"/Users/Sabamain/Desktop/todoapp/react-todo-functional/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Sabamain/Desktop/todoapp/react-todo-functional/src/TodoForm.js\";\nimport React, { useState } from 'react';\n\nconst TodoForm = ({\n  addTodo\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setvalue = _useState2[1];\n\n  const handleChange = e => {\n    //to handle change in form input (when user is typing)\n    setvalue(e.target.value); //e.target gives the value of current value the user is typing\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //to prevent DOM from reloading the page\n\n    if (!value) //if user submits empty form, do nothing\n      return;\n    addTodo(value);\n    setvalue(''); //set the value to be empty again to get ready for next input\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"app-title text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Another ToDo App\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-group row todo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control col-md-8 \",\n    type: \"text\",\n    placeholder: \"Add a ToDo\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"form-control btn-primary col-md-4 submit-button\",\n    type: \"submit\",\n    value: \"Add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/Sabamain/Desktop/todoapp/react-todo-functional/src/TodoForm.js"],"names":["React","useState","TodoForm","addTodo","value","setvalue","handleChange","e","target","handleSubmit","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA,oBACDF,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QACpBG,KADoB;AAAA,QACbC,QADa;;AAG3B,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAAI;AAC5BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR,CADwB,CACU;AACrC,GAFD;;AAIA,QAAMK,YAAY,GAAIF,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACG,cAAF,GADwB,CACA;;AACxB,QAAI,CAACN,KAAL,EAAwB;AACpB;AACJD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR,CALwB,CAKA;AAC3B,GAND;;AAQA,SACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAA8B,IAAA,SAAS,EAAE,0BAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAE,wBAAlB;AAA4C,IAAA,IAAI,EAAE,MAAlD;AAA0D,IAAA,WAAW,EAAE,YAAvE;AAAqF,IAAA,KAAK,EAAEL,KAA5F;AAAmG,IAAA,QAAQ,EAAEE,YAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,SAAS,EAAE,iDAAlB;AAAqE,IAAA,IAAI,EAAE,QAA3E;AAAqF,IAAA,KAAK,EAAE,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ;AASH,CAxBD;;AA0BA,eAAeJ,QAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst TodoForm = ({addTodo}) =>{\n    const [value, setvalue] = useState('');\n\n    const handleChange = (e) => {   //to handle change in form input (when user is typing)\n        setvalue(e.target.value);         //e.target gives the value of current value the user is typing\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();     //to prevent DOM from reloading the page\n        if (!value)             //if user submits empty form, do nothing\n            return;\n        addTodo(value);\n        setvalue('');           //set the value to be empty again to get ready for next input\n    };\n\n    return(\n        <div className={\"container\"}>\n            <div className=\"app-title text-center\">Another ToDo App</div>\n            <form onSubmit={handleSubmit} className={\"form-group row todo-form\"}>\n                <input className={\"form-control col-md-8 \"} type={\"text\"} placeholder={\"Add a ToDo\"} value={value} onChange={handleChange}/>\n                <input className={\"form-control btn-primary col-md-4 submit-button\"} type={\"submit\"} value={\"Add\"}/>\n            </form>\n        </div>\n    )\n};\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}